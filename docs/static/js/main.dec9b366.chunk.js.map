{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs..js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","class","card","animate__animated","animate__fadeIn","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqBhD,OACI,sBAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBe,SAAEP,GACzBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCPbK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARtB,kBAYbM,GAZa,4CAAH,sDCDZO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAN,QAAQC,IAAIe,GAER,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJZ,SAACA,GAAc,IAAD,EACXhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAdAC,qBAAU,WAENxB,EAAQC,GACFwB,MAAK,SAAAC,GACF7B,QAAQC,IAAI4B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAIEqB,EDVyBK,CAAY1B,GAA/Ba,EAPsB,EAO3BN,KAAaa,EAPc,EAOdA,QA4BrB,OACI,qCACE,oBAAIJ,UAAU,yCAAd,SAAwDhB,IAC1D,sBAAKgB,UAAU,YAAf,UAEKI,GAAY,mBAAGO,MAAM,aAAYC,MAAI,EAACC,mBAAiB,EAACC,iBAAe,EAA3D,sBAGLjB,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAGKA,GAFAA,EAAIC,cE9ChBoB,EAAe,WAAO,IAAD,EAEM/C,mBAAS,CAAC,mBAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAS9B,OACA,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGQiD,EAAWvB,KAAI,SAAAT,GAAQ,OAKvB,aAJI,CAIH,EAAD,CAEIA,SAAUA,GADLA,QAMjB,2BC9BRiC,IAASC,OAEN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.dec9b366.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( { setcategories } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const  handleInputChange = ( e ) => {\n        console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n       \n        if (inputValue.trim().length > 2) {\n            setcategories(cats=> [inputValue, ...cats]);\n            setInputValue('');\n        }\n        \n        \n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n\n   \n}\n\nAddCategory.propTypes = {\n    setcategories: PropTypes.func.isRequired\n  };","\n\n\n    export const  getGifs = async(category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zYNCTixSi5Vx3k8z4nOI8wsMzfBZoxU3`\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n        const gifs = data.map (img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n       \n        return gifs;\n    }","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(title)\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","//import React, { useState, useEffect } from 'react'\n//import { getGifs } from '../helpers/getGifs';\nimport React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGifs.';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n   // const [count, setCount] = useState(0);\n\n    //const state = useFetchGif();\n   // console.log(state)\n    // DESTRUC\n    const { data:images, loading} = useFetchGif(category);\n    \n/*\n   const [images, setImages] = useState([]);\n    useEffect(()=> {\n       // getGifs();\n       getGifs(category)\n            //.then(img => setImages(imgs))\n            .then(setImages);\n    }, [category])\n*/\n\n   /* const  getGifs = async() => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zYNCTixSi5Vx3k8z4nOI8wsMzfBZoxU3`\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n        const gifs = data.map (img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n        console.log(gifs);\n        setImages(gifs);\n    }*/\n\n   // getGifs();\n    return (\n        <>\n          <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\n        <div className=\"card-grid\">\n            \n            {loading  && <p class=\"className=\"card animate__animated animate__fadeIn>Cargando</p> }\n               \n            {\n                    images.map( img => (\n                    <GifGridItem  \n                    key={img.id}\n                   \n                    { ...img }\n                    />\n                    ))\n            }\n            \n        </div>\n        </>\n    )\n}\n\n// <button onClick={ ()=> setCount(count == 0)}>+</button>\n//            <h3>{category}</h3>\n\n\n/*\n\n <ol>\n                {\n                    images.map(({id, title}) => (\n                    <li key={id}>{title}</li>\n                    ))\n                }\n            </ol>\n\n            */\n\n\n/*\n  {\n                    images.map( img => (\n                    <GifGridItem  \n                    key={img.id}\n                    //img={img}\n                    { ...img }\n                    />\n                    ))\n                }\n           \n*/","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGif = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n//efectos no pueden ser async\n    useEffect(()=> {\n    \n        getGifs(category)\n             .then(imgs => {\n                 console.log(imgs)\n                 setstate({\n                     data: imgs,\n                     loading: false\n                 })\n             });\n     }, [category])\n\n\n    \n    return state; //{data:[], loading: true}\n}\n\n\n/*\nsetTimeout(() => {\n        setstate({\n            data: [1,2,3,4,5,6,7,],\n            loading: false\n        });\n    }, 3000);\n\n*/","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n//const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setcategories] = useState(['Rick And Morty'])\n\n    const handdleAdd = () => {\n        //setcategories([...categories, 'luis']);\n       // setcategories(cats=> [...cats, 'Luisito']);\n    }\n\n    return (      \n    <>\n        <h2>GifExpertApp</h2>\n        <hr />\n        <AddCategory setcategories={ setcategories } />\n        <ol>\n            {\n                //(category, i)\n                categories.map(category => (\n                    //{\n                //return <li key={category}> { category } </li>\n\n                //}\n                <GifGrid \n                    key={category} \n                    category={category} \n                    />\n                ))\n            }\n        </ol>\n        <hr />\n    </>\n    \n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(\n\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}